definitions:
  models.Quote:
    properties:
      author:
        type: string
      id:
        type: integer
      text:
        type: string
    type: object
info:
  contact: {}
paths:
  /quotes:
    get:
      consumes:
      - application/json
      description: Retrieve all quotes or filter by author query parameter
      parameters:
      - description: Author to filter quotes
        in: query
        name: author
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Quote'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all quotes or filter by author
      tags:
      - quotes
    post:
      consumes:
      - application/json
      description: Add a new quote with author and text
      parameters:
      - description: Quote to add
        in: body
        name: quote
        required: true
        schema:
          $ref: '#/definitions/models.Quote'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Quote'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add a new quote
      tags:
      - quotes
  /quotes/{id}:
    delete:
      description: Delete a quote by its ID
      parameters:
      - description: Quote ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete quote by ID
      tags:
      - quotes
  /quotes/random:
    get:
      consumes:
      - application/json
      description: Retrieve a random quote from the store
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Quote'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a random quote
      tags:
      - quotes
swagger: "2.0"
